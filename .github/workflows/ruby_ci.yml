# This is a basic workflow to help you get started with Actions

name: github actions for devon4j
env:
  ORG: "durhambikecoop"
  REPO_SOURCE: "freehub"
  REPO_DEST: "freehub.wiki"
  REPO_CONSOLIDATE: "durhambikecoop-guide"
  GH_REPO_SOURCE: "github.com/${ORG}/${REPO_SOURCE}.git"
  GH_REPO_DEST:  "github.com/${ORG}/${REPO_DEST}.git"
  GH_REPO_CONSOLIDATE: "github.com/${ORG}/${REPO_CONSOLIDATE}.git"
  # Add variable for the documenntation folder
  DOC_DIR: "doc"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "include"
  include:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby
        with:
          ruby-version: '3.1'

      - name: Install bundler
        run: bundle install

#      - name: Documentation
#        run: |
#          cd ..
#          git clone https://${GH_REPO_DEST}  #
#          git clone https://${GH_REPO_CONSOLIDATE}
#          yes | cp -rf ${REPO_SOURCE}/${DOC_DIR}/* ${REPO_DEST}/
#          cd ${REPO_DEST}
##         Rename .asciidoc to .md
#          grep -lr "link:[a-zA-Z0-9_.-]*.md.*" .| xargs -r sed -i "s/.md//g"
#          |
#          if git diff-index --quiet HEAD && [ ! -n "$(git status -s)" ]; then
#            set +e
#            pkill -9 -P $$ &> /dev/null || true
#            exit 0
#          else
#            git config user.email ${EMAIL}
#            git config user.name ${USER}
#            git status
#            git add .
#            git commit -m "${REPO_SOURCE} ${DOC_DIR}"  # | Travis CI build number $TRAVIS_BUILD_NUMBER"
#            git remote add origin-wiki "https://${USER}:${GITHUB_TOKEN}@${GH_REPO_DEST}"
#            git push origin-wiki master
#            cd ../${REPO_CONSOLIDATE}
#            if [ ! -d ${REPO_DEST} ]; then git submodule add https://${GH_REPO_DEST}; fi;
#            git submodule init
#            git submodule update --recursive --remote
#            cd ${REPO_DEST}
#            git checkout master
#            git pull
#            cd ..
#            git add .
#            git commit -m "${REPO_SOURCE} ${DOC_DIR}"  # | Travis CI build number $TRAVIS_BUILD_NUMBER"
#            git remote add origin-wiki "https://${USER}:${GITHUB_TOKEN}@${GH_REPO_CONSOLIDATE}"
#            git push origin-wiki master
#          fi
